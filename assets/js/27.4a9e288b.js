(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{653:function(e,r,t){"use strict";t.r(r);var n=t(16),a=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"let-s-get-started"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#let-s-get-started"}},[e._v("#")]),e._v(" Let's Get Started")]),e._v(" "),t("p",[e._v("Alright, enough talk, let's learn!")]),e._v(" "),t("p",[e._v("But don't forget to do coding problems from above while you learn!")]),e._v(" "),t("h2",{attrs:{id:"algorithmic-complexity-big-o-asymptotic-analysis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#algorithmic-complexity-big-o-asymptotic-analysis"}},[e._v("#")]),e._v(" Algorithmic complexity / Big-O / Asymptotic analysis")]),e._v(" "),t("ul",[t("li",[e._v("Nothing to implement here, you're just watching videos and taking notes! Yay!")]),e._v(" "),t("li",[e._v("There are a lot of videos here. Just watch enough until you understand it. You can always come back and review.")]),e._v(" "),t("li",[e._v("Don't worry if you don't understand all the math behind it.")]),e._v(" "),t("li",[e._v("You just need to understand how to express the complexity of an algorithm in terms of Big-O.")]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=iOq5kSKqeR4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Harvard CS50 - Asymptotic Notation (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=V6mKVRU1evU",target:"_blank",rel:"noopener noreferrer"}},[e._v("Big O Notations (general quick tutorial) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ei-A_wy5Yxw&index=2&list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN",target:"_blank",rel:"noopener noreferrer"}},[e._v("Big O Notation (and Omega and Theta) - best mathematical explanation (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Skiena:\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=gSyDMtdPNpU&index=2&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("video"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://archive.org/details/lecture2_202008",target:"_blank",rel:"noopener noreferrer"}},[e._v("slides"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_VIS4YDpuP98",target:"_blank",rel:"noopener noreferrer"}},[e._v("UC Berkeley Big O (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=B3SpQZaAZP4&index=10&list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN",target:"_blank",rel:"noopener noreferrer"}},[e._v("Amortized Analysis (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] TopCoder (includes recurrence relations and master theorem):\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.topcoder.com/community/competitive-programming/tutorials/computational-complexity-section-1/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Computational Complexity: Section 1"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.topcoder.com/community/competitive-programming/tutorials/computational-complexity-section-2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Computational Complexity: Section 2"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"http://bigocheatsheet.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cheat sheet"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("Well, that's about enough of that.")]),e._v(" "),t("p",[e._v('When you go through "Cracking the Coding Interview", there is a chapter on this, and at the end there is a quiz to see\nif you can identify the runtime complexity of different algorithms. It\'s a super review and test.')]),e._v(" "),t("h2",{attrs:{id:"data-structures"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-structures"}},[e._v("#")]),e._v(" Data Structures")]),e._v(" "),t("ul",[t("li",[t("h3",{attrs:{id:"arrays"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arrays"}},[e._v("#")]),e._v(" Arrays")]),e._v(" "),t("ul",[t("li",[e._v("[ ] About Arrays:\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/arrays-OsBSF",target:"_blank",rel:"noopener noreferrer"}},[e._v("Arrays (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_Wp8oiO_CZZE",target:"_blank",rel:"noopener noreferrer"}},[e._v("UC Berkeley CS61B - Linear and Multi-Dim Arrays (video)"),t("OutboundLink")],1),e._v(" (Start watching from 15m 32s)")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/dynamic-arrays-EwbnV",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dynamic Arrays (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=1jtrQqYpt7g",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jagged Arrays (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Implement a vector (mutable array with automatic resizing):\n"),t("ul",[t("li",[e._v("[ ] Practice coding using arrays and pointers, and pointer math to jump to an index instead of using indexing.")]),e._v(" "),t("li",[e._v("[ ] New raw data array with allocated memory\n"),t("ul",[t("li",[e._v("can allocate int array under the hood, just not use its features")]),e._v(" "),t("li",[e._v("start with 16, or if starting number is greater, use power of 2 - 16, 32, 64, 128")])])]),e._v(" "),t("li",[e._v("[ ] size() - number of items")]),e._v(" "),t("li",[e._v("[ ] capacity() - number of items it can hold")]),e._v(" "),t("li",[e._v("[ ] is_empty()")]),e._v(" "),t("li",[e._v("[ ] at(index) - returns item at given index, blows up if index out of bounds")]),e._v(" "),t("li",[e._v("[ ] push(item)")]),e._v(" "),t("li",[e._v("[ ] insert(index, item) - inserts item at index, shifts that index's value and trailing elements to the right")]),e._v(" "),t("li",[e._v("[ ] prepend(item) - can use insert above at index 0")]),e._v(" "),t("li",[e._v("[ ] pop() - remove from end, return value")]),e._v(" "),t("li",[e._v("[ ] delete(index) - delete item at index, shifting all trailing elements left")]),e._v(" "),t("li",[e._v("[ ] remove(item) - looks for value and removes index holding it (even if in multiple places)")]),e._v(" "),t("li",[e._v("[ ] find(item) - looks for value and returns first index with that value, -1 if not found")]),e._v(" "),t("li",[e._v("[ ] resize(new_capacity) // private function\n"),t("ul",[t("li",[e._v("when you reach capacity, resize to double the size")]),e._v(" "),t("li",[e._v("when popping an item, if size is 1/4 of capacity, resize to half")])])])])]),e._v(" "),t("li",[e._v("[ ] Time\n"),t("ul",[t("li",[e._v("O(1) to add/remove at end (amortized for allocations for more space), index, or update")]),e._v(" "),t("li",[e._v("O(n) to insert/remove elsewhere")])])]),e._v(" "),t("li",[e._v("[ ] Space\n"),t("ul",[t("li",[e._v("contiguous in memory, so proximity helps performance")]),e._v(" "),t("li",[e._v("space needed = (array capacity, which is >= n) * size of item, but even if 2n, still O(n)")])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"linked-lists"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linked-lists"}},[e._v("#")]),e._v(" Linked Lists")]),e._v(" "),t("ul",[t("li",[e._v("[ ] Description:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/singly-linked-lists-kHhgK",target:"_blank",rel:"noopener noreferrer"}},[e._v("Singly Linked Lists (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_htzJdKoEmO0",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B - Linked Lists 1 (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_-c4I3gFYe3w",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B - Linked Lists 2 (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=QN6FPiD0Gzo",target:"_blank",rel:"noopener noreferrer"}},[e._v("C Code (video)"),t("OutboundLink")],1),e._v("\n- not the whole video, just portions about Node struct and memory allocation")]),e._v(" "),t("li",[e._v("[ ] Linked List vs Arrays:\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures-optimizing-performance/core-linked-lists-vs-arrays-rjBs9",target:"_blank",rel:"noopener noreferrer"}},[e._v("Core Linked Lists Vs Arrays (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures-optimizing-performance/in-the-real-world-lists-vs-arrays-QUaUd",target:"_blank",rel:"noopener noreferrer"}},[e._v("In The Real World Linked Lists Vs Arrays (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=YQs6IC-vgmo",target:"_blank",rel:"noopener noreferrer"}},[e._v("why you should avoid linked lists (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Gotcha: you need pointer to pointer knowledge:\n(for when you pass a pointer to a function that may change the address where that pointer points)\nThis page is just to get a grasp on ptr to ptr. I don't recommend this list traversal style. Readability and maintainability suffer due to cleverness.\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.eskimo.com/~scs/cclass/int/sx8.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pointers to Pointers"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Implement (I did with tail pointer & without):\n"),t("ul",[t("li",[e._v("[ ] size() - returns number of data elements in list")]),e._v(" "),t("li",[e._v("[ ] empty() - bool returns true if empty")]),e._v(" "),t("li",[e._v("[ ] value_at(index) - returns the value of the nth item (starting at 0 for first)")]),e._v(" "),t("li",[e._v("[ ] push_front(value) - adds an item to the front of the list")]),e._v(" "),t("li",[e._v("[ ] pop_front() - remove front item and return its value")]),e._v(" "),t("li",[e._v("[ ] push_back(value) - adds an item at the end")]),e._v(" "),t("li",[e._v("[ ] pop_back() - removes end item and returns its value")]),e._v(" "),t("li",[e._v("[ ] front() - get value of front item")]),e._v(" "),t("li",[e._v("[ ] back() - get value of end item")]),e._v(" "),t("li",[e._v("[ ] insert(index, value) - insert value at index, so current item at that index is pointed to by new item at index")]),e._v(" "),t("li",[e._v("[ ] erase(index) - removes node at given index")]),e._v(" "),t("li",[e._v("[ ] value_n_from_end(n) - returns the value of the node at nth position from the end of the list")]),e._v(" "),t("li",[e._v("[ ] reverse() - reverses the list")]),e._v(" "),t("li",[e._v("[ ] remove_value(value) - removes the first item in the list with this value")])])]),e._v(" "),t("li",[e._v("[ ] Doubly-linked List\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/doubly-linked-lists-jpGKD",target:"_blank",rel:"noopener noreferrer"}},[e._v("Description (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("No need to implement")])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"stack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stack"}},[e._v("#")]),e._v(" Stack")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/stacks-UdKzQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stacks (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Will not implement. Implementing with array is trivial")])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"queue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[e._v("#")]),e._v(" Queue")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/queues-EShpq",target:"_blank",rel:"noopener noreferrer"}},[e._v("Queue (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Circular_buffer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Circular buffer/FIFO"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Implement using linked-list, with tail pointer:\n"),t("ul",[t("li",[e._v("enqueue(value) - adds value at position at tail")]),e._v(" "),t("li",[e._v("dequeue() - returns value and removes least recently added element (front)")]),e._v(" "),t("li",[e._v("empty()")])])]),e._v(" "),t("li",[e._v("[ ] Implement using fixed-sized array:\n"),t("ul",[t("li",[e._v("enqueue(value) - adds item at end of available storage")]),e._v(" "),t("li",[e._v("dequeue() - returns value and removes least recently added element")]),e._v(" "),t("li",[e._v("empty()")]),e._v(" "),t("li",[e._v("full()")])])]),e._v(" "),t("li",[e._v("[ ] Cost:\n"),t("ul",[t("li",[e._v("a bad implementation using linked list where you enqueue at head and dequeue at tail would be O(n)\nbecause you'd need the next to last element, causing a full traversal each dequeue")]),e._v(" "),t("li",[e._v("enqueue: O(1) (amortized, linked list and array [probing])")]),e._v(" "),t("li",[e._v("dequeue: O(1) (linked list and array)")]),e._v(" "),t("li",[e._v("empty: O(1) (linked list and array)")])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"hash-table"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-table"}},[e._v("#")]),e._v(" Hash table")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("[ ] Videos:")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=0M_kIqhwbFo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=8",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hashing with Chaining (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=BRO7mVIFt08&index=9&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Table Doubling, Karp-Rabin (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=rvdJDijO2Ro&index=10&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Open Addressing, Cryptographic Hashing (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=C4Kc8xzcA68",target:"_blank",rel:"noopener noreferrer"}},[e._v("PyCon 2010: The Mighty Dictionary (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=66P5FMkWoVU",target:"_blank",rel:"noopener noreferrer"}},[e._v("PyCon 2017: The Dictionary Even Mightier (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=z0lJ2k0sl1g&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=11",target:"_blank",rel:"noopener noreferrer"}},[e._v("(Advanced) Randomization: Universal & Perfect Hashing (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=N0COwN14gt0&list=PL2B4EEwhKD-NbwZ4ezj7gyc_3yNrojKM9&index=4",target:"_blank",rel:"noopener noreferrer"}},[e._v("(Advanced) Perfect hashing (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("[ ] Online Courses:")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures-optimizing-performance/core-hash-tables-m7UuP",target:"_blank",rel:"noopener noreferrer"}},[e._v("Core Hash Tables (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/home/week/4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Data Structures (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/phone-book-problem-NYZZP",target:"_blank",rel:"noopener noreferrer"}},[e._v("Phone Book Problem (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] distributed hash tables:\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/instant-uploads-and-storage-optimization-in-dropbox-DvaIb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Instant Uploads And Storage Optimization In Dropbox (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/distributed-hash-tables-tvH8H",target:"_blank",rel:"noopener noreferrer"}},[e._v("Distributed Hash Tables (video)"),t("OutboundLink")],1)])])])])]),e._v(" "),t("li",[t("p",[e._v("[ ] Implement with array using linear probing")]),e._v(" "),t("ul",[t("li",[e._v("hash(k, m) - m is size of hash table")]),e._v(" "),t("li",[e._v("add(key, value) - if key already exists, update value")]),e._v(" "),t("li",[e._v("exists(key)")]),e._v(" "),t("li",[e._v("get(key)")]),e._v(" "),t("li",[e._v("remove(key)")])])])])])]),e._v(" "),t("h2",{attrs:{id:"more-knowledge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#more-knowledge"}},[e._v("#")]),e._v(" More Knowledge")]),e._v(" "),t("ul",[t("li",[t("h3",{attrs:{id:"binary-search"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#binary-search"}},[e._v("#")]),e._v(" Binary search")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=D5SrAga1pno",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binary Search (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binary Search (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.topcoder.com/community/competitive-programming/tutorials/binary-search/",target:"_blank",rel:"noopener noreferrer"}},[e._v("detail"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Implement:\n"),t("ul",[t("li",[e._v("binary search (on sorted array of integers)")]),e._v(" "),t("li",[e._v("binary search using recursion")])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"bitwise-operations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bitwise-operations"}},[e._v("#")]),e._v(" Bitwise operations")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://github.com/jwasham/coding-interview-university/blob/main/extras/cheat%20sheets/bits-cheat-sheet.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bits cheat sheet"),t("OutboundLink")],1),e._v(" - you should know many of the powers of 2 from (2^1 to 2^16 and 2^32)")]),e._v(" "),t("li",[e._v("[ ] Get a really good understanding of manipulating bits with: &, |, ^, ~, >>, <<\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Word_(computer_architecture)",target:"_blank",rel:"noopener noreferrer"}},[e._v("words"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Good intro:\n"),t("a",{attrs:{href:"https://www.youtube.com/watch?v=7jkIUgLC29I",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bit Manipulation (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=d0AwjSpNXR0",target:"_blank",rel:"noopener noreferrer"}},[e._v("C Programming Tutorial 2-10: Bitwise Operators (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Bit_manipulation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bit Manipulation"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Bitwise_operation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitwise Operation"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://graphics.stanford.edu/~seander/bithacks.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bithacks"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://bits.stephan-brumme.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Bit Twiddler"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://bits.stephan-brumme.com/interactive.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Bit Twiddler Interactive"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ZusiKXcz_ac",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bit Hacks (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://pconrad.github.io/old_pconrad_cs16/topics/bitOps/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Practice Operations"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] 2s and 1s complement\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=lKTsv6iVxV4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binary: Plusses & Minuses (Why We Use Two's Complement) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Ones%27_complement",target:"_blank",rel:"noopener noreferrer"}},[e._v("1s Complement"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Two%27s_complement",target:"_blank",rel:"noopener noreferrer"}},[e._v("2s Complement"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Count set bits\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://youtu.be/Hzuzo9NJrlc",target:"_blank",rel:"noopener noreferrer"}},[e._v("4 ways to count bits in a byte (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetKernighan",target:"_blank",rel:"noopener noreferrer"}},[e._v("Count Bits"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://stackoverflow.com/questions/109023/how-to-count-the-number-of-set-bits-in-a-32-bit-integer",target:"_blank",rel:"noopener noreferrer"}},[e._v("How To Count The Number Of Set Bits In a 32 Bit Integer"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Swap values:\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://bits.stephan-brumme.com/swap.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Swap"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Absolute value:\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://bits.stephan-brumme.com/absInteger.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Absolute Integer"),t("OutboundLink")],1)])])])])])]),e._v(" "),t("h2",{attrs:{id:"trees"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#trees"}},[e._v("#")]),e._v(" Trees")]),e._v(" "),t("ul",[t("li",[t("h3",{attrs:{id:"trees-notes-background"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#trees-notes-background"}},[e._v("#")]),e._v(" Trees - Notes & Background")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/trees-95qda",target:"_blank",rel:"noopener noreferrer"}},[e._v("Series: Trees (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("basic tree construction")]),e._v(" "),t("li",[e._v("traversal")]),e._v(" "),t("li",[e._v("manipulation algorithms")]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=uWL6FJhq5fM",target:"_blank",rel:"noopener noreferrer"}},[e._v("BFS(breadth-first search) and DFS(depth-first search) (video)"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("BFS notes:\n"),t("ul",[t("li",[e._v("level order (BFS, using queue)")]),e._v(" "),t("li",[e._v("time complexity: O(n)")]),e._v(" "),t("li",[e._v("space complexity: best: O(1), worst: O(n/2)=O(n)")])])]),e._v(" "),t("li",[e._v("DFS notes:\n"),t("ul",[t("li",[e._v("time complexity: O(n)")]),e._v(" "),t("li",[e._v("space complexity:\nbest: O(log n) - avg. height of tree\nworst: O(n)")]),e._v(" "),t("li",[e._v("inorder (DFS: left, self, right)")]),e._v(" "),t("li",[e._v("postorder (DFS: left, right, self)")]),e._v(" "),t("li",[e._v("preorder (DFS: self, left, right)")])])])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"binary-search-trees-bsts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#binary-search-trees-bsts"}},[e._v("#")]),e._v(" Binary search trees: BSTs")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=x6At0nzX92o&index=1&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binary Search Tree Review (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/E7cXP/introduction",target:"_blank",rel:"noopener noreferrer"}},[e._v("Introduction (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=9Jry5-82I68",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("C/C++:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=COZK7NATh4k&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=28",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binary search tree - Implementation in C/C++ (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=hWokyBoo0aI&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=29",target:"_blank",rel:"noopener noreferrer"}},[e._v("BST implementation - memory allocation in stack and heap (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=Ut90klNN264&index=30&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P",target:"_blank",rel:"noopener noreferrer"}},[e._v("Find min and max element in a binary search tree (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=_pnqMz5nrRs&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=31",target:"_blank",rel:"noopener noreferrer"}},[e._v("Find height of a binary tree (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=9RHO6jU--GU&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=32",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binary tree traversal - breadth-first and depth-first strategies (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=86g8jAQug04&index=33&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binary tree: Level Order Traversal (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=gm8DUJJhmY4&index=34&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binary tree traversal: Preorder, Inorder, Postorder (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=yEwSGhSsT0U&index=35&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P",target:"_blank",rel:"noopener noreferrer"}},[e._v("Check if a binary tree is binary search tree or not (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=gcULXE7ViZw&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=36",target:"_blank",rel:"noopener noreferrer"}},[e._v("Delete a node from Binary Search Tree (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=5cPbNCrdotA&index=37&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P",target:"_blank",rel:"noopener noreferrer"}},[e._v("Inorder Successor in a binary search tree (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Implement:\n"),t("ul",[t("li",[e._v("[ ] insert    // insert value into tree")]),e._v(" "),t("li",[e._v("[ ] get_node_count // get count of values stored")]),e._v(" "),t("li",[e._v("[ ] print_values // prints the values in the tree, from min to max")]),e._v(" "),t("li",[e._v("[ ] delete_tree")]),e._v(" "),t("li",[e._v("[ ] is_in_tree // returns true if given value exists in the tree")]),e._v(" "),t("li",[e._v("[ ] get_height // returns the height in nodes (single node's height is 1)")]),e._v(" "),t("li",[e._v("[ ] get_min   // returns the minimum value stored in the tree")]),e._v(" "),t("li",[e._v("[ ] get_max   // returns the maximum value stored in the tree")]),e._v(" "),t("li",[e._v("[ ] is_binary_search_tree")]),e._v(" "),t("li",[e._v("[ ] delete_value")]),e._v(" "),t("li",[e._v("[ ] get_successor // returns next-highest value in tree after given value, -1 if none")])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"heap-priority-queue-binary-heap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#heap-priority-queue-binary-heap"}},[e._v("#")]),e._v(" Heap / Priority Queue / Binary Heap")]),e._v(" "),t("ul",[t("li",[e._v("visualized as a tree, but is usually linear in storage (array, linked list)")]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)",target:"_blank",rel:"noopener noreferrer"}},[e._v("Heap"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/2OpTs/introduction",target:"_blank",rel:"noopener noreferrer"}},[e._v("Introduction (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/z3l9N/naive-implementations",target:"_blank",rel:"noopener noreferrer"}},[e._v("Naive Implementations (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/GRV2q/binary-trees",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binary Trees (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/supplement/S5xxz/tree-height-remark",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tree Height Remark (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/0g1dl/basic-operations",target:"_blank",rel:"noopener noreferrer"}},[e._v("Basic Operations (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/gl5Ni/complete-binary-trees",target:"_blank",rel:"noopener noreferrer"}},[e._v("Complete Binary Trees (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/HxQo9/pseudocode",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pseudocode (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/odNJmw5TOEE?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3291",target:"_blank",rel:"noopener noreferrer"}},[e._v("Heap Sort - jumps to start (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/hSzMO/heap-sort",target:"_blank",rel:"noopener noreferrer"}},[e._v("Heap Sort (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/dwrOS/building-a-heap",target:"_blank",rel:"noopener noreferrer"}},[e._v("Building a heap (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=B7hVxCmfPtM&index=4&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT: Heaps and Heap Sort (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_yIUFT6AKBGE",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 24: Priority Queues (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=MiyLo8adrWw",target:"_blank",rel:"noopener noreferrer"}},[e._v("Linear Time BuildHeap (max-heap)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Implement a max-heap:\n"),t("ul",[t("li",[e._v("[ ] insert")]),e._v(" "),t("li",[e._v("[ ] sift_up - needed for insert")]),e._v(" "),t("li",[e._v("[ ] get_max - returns the max item, without removing it")]),e._v(" "),t("li",[e._v("[ ] get_size() - return number of elements stored")]),e._v(" "),t("li",[e._v("[ ] is_empty() - returns true if heap contains no elements")]),e._v(" "),t("li",[e._v("[ ] extract_max - returns the max item, removing it")]),e._v(" "),t("li",[e._v("[ ] sift_down - needed for extract_max")]),e._v(" "),t("li",[e._v("[ ] remove(x) - removes item at index x")]),e._v(" "),t("li",[e._v("[ ] heapify - create a heap from an array of elements, needed for heap_sort")]),e._v(" "),t("li",[e._v("[ ] heap_sort() - take an unsorted array and turn it into a sorted array in-place using a max heap or min heap")])])])])])]),e._v(" "),t("h2",{attrs:{id:"sorting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sorting"}},[e._v("#")]),e._v(" Sorting")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("[ ] Notes:")]),e._v(" "),t("ul",[t("li",[e._v("Implement sorts & know best case/worst case, average complexity of each:\n"),t("ul",[t("li",[e._v("no bubble sort - it's terrible - O(n^2), except when n <= 16")])])]),e._v(" "),t("li",[e._v('[ ] Stability in sorting algorithms ("Is Quicksort stable?")\n'),t("ul",[t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Sorting_algorithm#Stability",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sorting Algorithm Stability"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://stackoverflow.com/questions/1517793/stability-in-sorting-algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stability In Sorting Algorithms"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.geeksforgeeks.org/stability-in-sorting-algorithms/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stability In Sorting Algorithms"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://homepages.math.uic.edu/~leon/cs-mcs401-s08/handouts/stability.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sorting Algorithms - Stability"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Which algorithms can be used on linked lists? Which on arrays? Which on both?\n"),t("ul",[t("li",[e._v("I wouldn't recommend sorting a linked list, but merge sort is doable.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.geeksforgeeks.org/merge-sort-for-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Merge Sort For Linked List"),t("OutboundLink")],1)])])])])]),e._v(" "),t("li",[t("p",[e._v("For heapsort, see Heap data structure above. Heap sort is great, but not stable")])]),e._v(" "),t("li",[t("p",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/home/week/3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick - Mergesort (5 videos)"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/ARWDq/mergesort",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. Mergesort"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/PWNEl/bottom-up-mergesort",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. Bottom up Mergesort"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/xAltF/sorting-complexity",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. Sorting Complexity"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/9FYhS/comparators",target:"_blank",rel:"noopener noreferrer"}},[e._v("4. Comparators"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/pvvLZ/stability",target:"_blank",rel:"noopener noreferrer"}},[e._v("5. Stability"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/home/week/3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick - Quicksort (4 videos)"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/vjvnC/quicksort",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. Quicksort"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/UQxFT/selection",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. Selection"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/XvjPd/duplicate-keys",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. Duplicate Keys"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/QBNZ7/system-sorts",target:"_blank",rel:"noopener noreferrer"}},[e._v("4. System Sorts"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("[ ] UC Berkeley:")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_EiUvYS2DT6I",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 29: Sorting I (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_2hTY3t80Qsk",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 30: Sorting II (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_Y6LOLpxg6Dc",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 32: Sorting III (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_qNMQ4ly43p4",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 33: Sorting V (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=P00xJgWzz2c&index=1&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bubble Sort (video)"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ni_zk257Nqo&index=7&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("Analyzing Bubble Sort (video)"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=Kg4bqzAqRBM&index=3&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Insertion Sort, Merge Sort (video)"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=c4BRHC7kTaQ&index=2&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("Insertion Sort (video)"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=GCae1WNvnZM&index=3&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("Merge Sort (video)"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=y_G9BkAm6B8&index=4&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("Quicksort (video)"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=6nDMgr0-Yyo&index=8&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("Selection Sort (video)"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("[ ] Merge sort code:")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/examples/sorting/mergesort.c",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using output array (C)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://github.com/jwasham/practice-python/blob/master/merge_sort/merge_sort.py",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using output array (Python)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://github.com/jwasham/practice-cpp/blob/master/merge_sort/merge_sort.cc",target:"_blank",rel:"noopener noreferrer"}},[e._v("In-place (C++)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("[ ] Quick sort code:")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/examples/randomization/quick.c",target:"_blank",rel:"noopener noreferrer"}},[e._v("Implementation (C)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://github.com/jwasham/practice-c/blob/master/quick_sort/quick_sort.c",target:"_blank",rel:"noopener noreferrer"}},[e._v("Implementation (C)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://github.com/jwasham/practice-python/blob/master/quick_sort/quick_sort.py",target:"_blank",rel:"noopener noreferrer"}},[e._v("Implementation (Python)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("[ ] Implement:")]),e._v(" "),t("ul",[t("li",[e._v("[ ] Mergesort: O(n log n) average and worst case")]),e._v(" "),t("li",[e._v("[ ] Quicksort O(n log n) average case")]),e._v(" "),t("li",[e._v("Selection sort and insertion sort are both O(n^2) average and worst case")]),e._v(" "),t("li",[e._v("For heapsort, see Heap data structure above")])])]),e._v(" "),t("li",[t("p",[e._v("[ ] Not required, but I recommended them:")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/home/week/3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick - Radix Sorts (6 videos)"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/vGHvb/strings-in-java",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. Strings in Java"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/2pi1Z/key-indexed-counting",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. Key Indexed Counting"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/c1U7L/lsd-radix-sort",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. Least Significant Digit First String Radix Sort"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/gFxwG/msd-radix-sort",target:"_blank",rel:"noopener noreferrer"}},[e._v("4. Most Significant Digit First String Radix Sort"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/crkd5/3-way-radix-quicksort",target:"_blank",rel:"noopener noreferrer"}},[e._v("5. 3 Way Radix Quicksort"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/TH18W/suffix-arrays",target:"_blank",rel:"noopener noreferrer"}},[e._v("6. Suffix Arrays"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#radixSort",target:"_blank",rel:"noopener noreferrer"}},[e._v("Radix Sort"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=xhr26ia4k38",target:"_blank",rel:"noopener noreferrer"}},[e._v("Radix Sort (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=Nz1KZXbghj8&index=7&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Radix Sort, Counting Sort (linear time given constraints) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=cNB2lADK3_s&index=8&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("Randomization: Matrix Multiply, Quicksort, Freivalds' algorithm (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=pOKy3RZbSws&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&index=14",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sorting in Linear Time (video)"),t("OutboundLink")],1)])])])]),e._v(" "),t("p",[e._v("As a summary, here is a visual representation of "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=kPRA0W1kECg",target:"_blank",rel:"noopener noreferrer"}},[e._v("15 sorting algorithms"),t("OutboundLink")],1),e._v('.\nIf you need more detail on this subject, see "Sorting" section in '),t("a",{attrs:{href:"#additional-detail-on-some-subjects"}},[e._v("Additional Detail on Some Subjects")])]),e._v(" "),t("h2",{attrs:{id:"graphs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#graphs"}},[e._v("#")]),e._v(" Graphs")]),e._v(" "),t("p",[e._v("Graphs can be used to represent many problems in computer science, so this section is long, like trees and sorting were.")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Notes:")]),e._v(" "),t("ul",[t("li",[e._v("There are 4 basic ways to represent a graph in memory:\n"),t("ul",[t("li",[e._v("objects and pointers")]),e._v(" "),t("li",[e._v("adjacency matrix")]),e._v(" "),t("li",[e._v("adjacency list")]),e._v(" "),t("li",[e._v("adjacency map")])])]),e._v(" "),t("li",[e._v("Familiarize yourself with each representation and its pros & cons")]),e._v(" "),t("li",[e._v("BFS and DFS - know their computational complexity, their trade offs, and how to implement them in real code")]),e._v(" "),t("li",[e._v("When asked a question, look for a graph-based solution first, then move on if none")])])]),e._v(" "),t("li",[t("p",[e._v("[ ] MIT(videos):")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=s-CYnVz-uh4&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=13",target:"_blank",rel:"noopener noreferrer"}},[e._v("Breadth-First Search"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=AfSk24UTFS8&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=14",target:"_blank",rel:"noopener noreferrer"}},[e._v("Depth-First Search"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("[ ] Skiena Lectures - great intro:")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=OiXxhDrFruw&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=11",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - Lecture 11 - Graph Data Structures (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=g5vF8jscteo&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=12",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - Lecture 12 - Breadth-First Search (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=S23W6eTcqdY&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=13",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - Lecture 13 - Graph Algorithms (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=WitPBKGV0HY&index=14&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - Lecture 14 - Graph Algorithms (con't) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ia1L30l7OIg&index=15&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - Lecture 15 - Graph Algorithms (con't 2) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=jgDOQq6iWy8&index=16&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - Lecture 16 - Graph Algorithms (con't 3) (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("[ ] Graphs (review and more):")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=Aa2sqUhIn-E&index=15&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006 Single-Source Shortest Paths Problem (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=2E7MmKv0Y24&index=16&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006 Dijkstra (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ozsuci5pIso&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=17",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006 Bellman-Ford (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=CHvQ3q_gJ7E&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=18",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006 Speeding Up Dijkstra (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=i_AQT_XfvD8&index=6&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni: Graph Algorithms I - Topological Sorting, Minimum Spanning Trees, Prim's Algorithm -  Lecture 6 (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ufj5_bppBsA&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=7",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni: Graph Algorithms II - DFS, BFS, Kruskal's Algorithm, Union Find Data Structure - Lecture 7 (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=DiedsPsMKXc&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=8",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni: Graph Algorithms III: Shortest Path - Lecture 8 (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=XIAQRlNkJAw&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=9",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni: Graph Alg. IV: Intro to geometric algorithms - Lecture 9 (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("s",[t("a",{attrs:{href:"https://youtu.be/dgjX4HdMI-Q?list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&t=3489",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B 2014 (starting at 58:09) (video)"),t("OutboundLink")],1)])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_zFbq8vOZ_0k",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B 2014: Weighted graphs (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=tKwnms5iRBU&index=16&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("Greedy Algorithms: Minimum Spanning Tree (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=RpgcYiky7uw",target:"_blank",rel:"noopener noreferrer"}},[e._v("Strongly Connected Components Kosaraju's Algorithm Graph Algorithm (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("Full Coursera Course:")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-on-graphs/home/welcome",target:"_blank",rel:"noopener noreferrer"}},[e._v("Algorithms on Graphs (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("I'll implement:")]),e._v(" "),t("ul",[t("li",[e._v("[ ] DFS with adjacency list (recursive)")]),e._v(" "),t("li",[e._v("[ ] DFS with adjacency list (iterative with stack)")]),e._v(" "),t("li",[e._v("[ ] DFS with adjacency matrix (recursive)")]),e._v(" "),t("li",[e._v("[ ] DFS with adjacency matrix (iterative with stack)")]),e._v(" "),t("li",[e._v("[ ] BFS with adjacency list")]),e._v(" "),t("li",[e._v("[ ] BFS with adjacency matrix")]),e._v(" "),t("li",[e._v("[ ] single-source shortest path (Dijkstra)")]),e._v(" "),t("li",[e._v("[ ] minimum spanning tree")]),e._v(" "),t("li",[e._v("DFS-based algorithms (see Aduni videos above):\n"),t("ul",[t("li",[e._v("[ ] check for cycle (needed for topological sort, since we'll check for cycle before starting)")]),e._v(" "),t("li",[e._v("[ ] topological sort")]),e._v(" "),t("li",[e._v("[ ] count connected components in a graph")]),e._v(" "),t("li",[e._v("[ ] list strongly connected components")]),e._v(" "),t("li",[e._v("[ ] check for bipartite graph")])])])])])]),e._v(" "),t("h2",{attrs:{id:"even-more-knowledge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#even-more-knowledge"}},[e._v("#")]),e._v(" Even More Knowledge")]),e._v(" "),t("ul",[t("li",[t("h3",{attrs:{id:"recursion"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#recursion"}},[e._v("#")]),e._v(" Recursion")]),e._v(" "),t("ul",[t("li",[e._v("[ ] Stanford lectures on recursion & backtracking:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=gl3emqCuueQ&list=PLFE6E58F856038C69&index=8",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lecture 8 | Programming Abstractions (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=uFJhEPrbycQ&list=PLFE6E58F856038C69&index=9",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lecture 9 | Programming Abstractions (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=NdF1QDTRkck&index=10&list=PLFE6E58F856038C69",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lecture 10 | Programming Abstractions (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=p-gpaIGRCQI&list=PLFE6E58F856038C69&index=11",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lecture 11 | Programming Abstractions (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("When it is appropriate to use it?")]),e._v(" "),t("li",[e._v("How is tail recursion better than not?\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.quora.com/What-is-tail-recursion-Why-is-it-so-bad",target:"_blank",rel:"noopener noreferrer"}},[e._v("What Is Tail Recursion Why Is It So Bad?"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/lecture/programming-languages/tail-recursion-YZic1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tail Recursion (video)"),t("OutboundLink")],1)])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"dynamic-programming"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-programming"}},[e._v("#")]),e._v(" Dynamic Programming")]),e._v(" "),t("ul",[t("li",[e._v("You probably won't see any dynamic programming problems in your interview, but it's worth being able to recognize a\nproblem as being a candidate for dynamic programming.")]),e._v(" "),t("li",[e._v("This subject can be pretty difficult, as each DP soluble problem must be defined as a recursion relation, and coming up with it can be tricky.")]),e._v(" "),t("li",[e._v("I suggest looking at many examples of DP problems until you have a solid understanding of the pattern involved.")]),e._v(" "),t("li",[e._v("[ ] Videos:\n"),t("ul",[t("li",[e._v("the Skiena videos can be hard to follow since he sometimes uses the whiteboard, which is too small to see")]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/Qc2ieXRgR0k?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=1718",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena: CSE373 2012 - Lecture 19 - Introduction to Dynamic Programming (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/IsmMhMdyeGY?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=2749",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena: CSE373 2012 - Lecture 20 - Edit Distance (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/o0V9eYF4UI8?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=406",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena: CSE373 2012 - Lecture 21 - Dynamic Programming Examples (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=dRbMC1Ltl3A&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=22",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena: CSE373 2012 - Lecture 22 - Applications of Dynamic Programming (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/J5aJEcOr6Eo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3558",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simonson: Dynamic Programming 0 (starts at 59:18) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=0EzHjQ_SOeU&index=11&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simonson: Dynamic Programming I - Lecture 11 (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=v1qiRwuJU7g&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=12",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simonson: Dynamic programming II - Lecture 12 (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] List of individual DP problems (each is short):\n"),t("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dynamic Programming (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Yale Lecture notes:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#dynamicProgramming",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dynamic Programming"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Coursera:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/80RrW/the-rna-secondary-structure-problem",target:"_blank",rel:"noopener noreferrer"}},[e._v("The RNA secondary structure problem (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/PSonq/a-dynamic-programming-algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("A dynamic programming algorithm (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/oUEK2/illustrating-the-dp-algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Illustrating the DP algorithm (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/nfK2r/running-time-of-the-dp-algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Running time of the DP algorithm (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/M999a/dp-vs-recursive-implementation",target:"_blank",rel:"noopener noreferrer"}},[e._v("DP vs. recursive implementation (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/UZ7o6/global-pairwise-sequence-alignment",target:"_blank",rel:"noopener noreferrer"}},[e._v("Global pairwise sequence alignment (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/WnNau/local-pairwise-sequence-alignment",target:"_blank",rel:"noopener noreferrer"}},[e._v("Local pairwise sequence alignment (video)"),t("OutboundLink")],1)])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"design-patterns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#design-patterns"}},[e._v("#")]),e._v(" Design patterns")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=3cmzqZzwNDM&list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc&index=3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Quick UML review (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Learn these patterns:\n"),t("ul",[t("li",[e._v("[ ] strategy")]),e._v(" "),t("li",[e._v("[ ] singleton")]),e._v(" "),t("li",[e._v("[ ] adapter")]),e._v(" "),t("li",[e._v("[ ] prototype")]),e._v(" "),t("li",[e._v("[ ] decorator")]),e._v(" "),t("li",[e._v("[ ] visitor")]),e._v(" "),t("li",[e._v("[ ] factory, abstract factory")]),e._v(" "),t("li",[e._v("[ ] facade")]),e._v(" "),t("li",[e._v("[ ] observer")]),e._v(" "),t("li",[e._v("[ ] proxy")]),e._v(" "),t("li",[e._v("[ ] delegate")]),e._v(" "),t("li",[e._v("[ ] command")]),e._v(" "),t("li",[e._v("[ ] state")]),e._v(" "),t("li",[e._v("[ ] memento")]),e._v(" "),t("li",[e._v("[ ] iterator")]),e._v(" "),t("li",[e._v("[ ] composite")]),e._v(" "),t("li",[e._v("[ ] flyweight")])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/LAP2A80Ajrg?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO&t=3344",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chapter 6 (Part 1) - Patterns (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=U8-PGsjvZc4&index=12&list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chapter 6 (Part 2) - Abstraction-Occurrence, General Hierarchy, Player-Role, Singleton, Observer, Delegation (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=7sduBHuex4c&index=13&list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chapter 6 (Part 3) - Adapter, Facade, Immutable, Read-Only Interface, Proxy (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLF206E906175C7E07",target:"_blank",rel:"noopener noreferrer"}},[e._v("Series of videos (27 videos)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.amazon.com/Head-First-Design-Patterns-Freeman/dp/0596007124",target:"_blank",rel:"noopener noreferrer"}},[e._v("Head First Design Patterns"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v('I know the canonical book is "Design Patterns: Elements of Reusable Object-Oriented Software", but Head First is great for beginners to OO.')])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://sourcemaking.com/design-patterns-and-tips",target:"_blank",rel:"noopener noreferrer"}},[e._v("Handy reference: 101 Design Patterns & Tips for Developers"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://github.com/kamranahmedse/design-patterns-for-humans#structural-design-patterns",target:"_blank",rel:"noopener noreferrer"}},[e._v("Design patterns for humans"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"combinatorics-n-choose-k-probability"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#combinatorics-n-choose-k-probability"}},[e._v("#")]),e._v(" Combinatorics (n choose k) & Probability")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=8RRo6Ti9d0U",target:"_blank",rel:"noopener noreferrer"}},[e._v("Math Skills: How to find Factorial, Permutation and Combination (Choose) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=sZkAAk9Wwa4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Make School: Probability (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=dNaJg-mLobQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Make School: More Probability and Markov Chains (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Khan Academy:\n"),t("ul",[t("li",[e._v("Course layout:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.khanacademy.org/math/probability/probability-and-combinatorics-topic",target:"_blank",rel:"noopener noreferrer"}},[e._v("Basic Theoretical Probability"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("Just the videos - 41 (each are simple and each are short):\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=uzkc-qNVoOk&list=PLC58778F28211FA19",target:"_blank",rel:"noopener noreferrer"}},[e._v("Probability Explained (video)"),t("OutboundLink")],1)])])])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"np-np-complete-and-approximation-algorithms"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#np-np-complete-and-approximation-algorithms"}},[e._v("#")]),e._v(" NP, NP-Complete and Approximation Algorithms")]),e._v(" "),t("ul",[t("li",[e._v("Know about the most famous classes of NP-complete problems, such as traveling salesman and the knapsack problem,\nand be able to recognize them when an interviewer asks you them in disguise.")]),e._v(" "),t("li",[e._v("Know what NP-complete means.")]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=moPtwq_cVH8&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=23",target:"_blank",rel:"noopener noreferrer"}},[e._v("Computational Complexity (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Simonson:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/qcGnJ47Smlo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=2939",target:"_blank",rel:"noopener noreferrer"}},[e._v("Greedy Algs. II & Intro to NP Completeness (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=e0tGC6ZQdQE&index=16&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm",target:"_blank",rel:"noopener noreferrer"}},[e._v("NP Completeness II & Reductions (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=fCX1BGT3wjE&index=17&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm",target:"_blank",rel:"noopener noreferrer"}},[e._v("NP Completeness III (Video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=NKLDp3Rch3M&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=18",target:"_blank",rel:"noopener noreferrer"}},[e._v("NP Completeness IV (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Skiena:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/KiK5TVgXbFg?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=1508",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - Lecture 23 - Introduction to NP-Completeness (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=27Al52X3hd4&index=24&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - Lecture 24 - NP-Completeness Proofs (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=xCPH4gwIIXM&index=25&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - Lecture 25 - NP-Completeness Challenge (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=eHZifpgyH_4&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=22",target:"_blank",rel:"noopener noreferrer"}},[e._v("Complexity: P, NP, NP-completeness, Reductions (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=MEz1J9wY2iM&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=24",target:"_blank",rel:"noopener noreferrer"}},[e._v("Complexity: Approximation Algorithms (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=4q-jmGrmxKs&index=25&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("Complexity: Fixed-Parameter Algorithms (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("Peter Norvig discusses near-optimal solutions to traveling salesman problem:\n"),t("ul",[t("li",[t("a",{attrs:{href:"http://nbviewer.jupyter.org/url/norvig.com/ipython/TSP.ipynb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jupyter Notebook"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("Pages 1048 - 1140 in CLRS if you have it.")])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"how-computers-process-a-program"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-computers-process-a-program"}},[e._v("#")]),e._v(" How computers process a program")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=XM4lGflQFvA",target:"_blank",rel:"noopener noreferrer"}},[e._v("How CPU executes a program (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/1I5ZMmrOfnA",target:"_blank",rel:"noopener noreferrer"}},[e._v("How computers calculate - ALU (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/fpnE6UAfbtU",target:"_blank",rel:"noopener noreferrer"}},[e._v("Registers and RAM (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/FZGugFqdr60",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Central Processing Unit (CPU) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://youtu.be/zltgXvg6r3k",target:"_blank",rel:"noopener noreferrer"}},[e._v("Instructions and Programs (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"caches"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#caches"}},[e._v("#")]),e._v(" Caches")]),e._v(" "),t("ul",[t("li",[e._v("[ ] LRU cache:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=R5ON3iwx78M",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Magic of LRU Cache (100 Days of Google Dev) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=bq6N7Ym81iI",target:"_blank",rel:"noopener noreferrer"}},[e._v("Implementing LRU (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=8-FZRAjR7qU",target:"_blank",rel:"noopener noreferrer"}},[e._v("LeetCode - 146 LRU Cache (C++) (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] CPU cache:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=vjYF_fAZI5E&list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-&index=24",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.004 L15: The Memory Hierarchy (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ajgC3-pyGlk&index=25&list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.004 L16: Cache Issues (video)"),t("OutboundLink")],1)])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"processes-and-threads"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#processes-and-threads"}},[e._v("#")]),e._v(" Processes and Threads")]),e._v(" "),t("ul",[t("li",[e._v("[ ] Computer Science 162 - Operating Systems (25 videos):\n"),t("ul",[t("li",[e._v("for processes and threads see videos 1-11")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iBDyz-ba4yDskqMDY6A1w_c",target:"_blank",rel:"noopener noreferrer"}},[e._v("Operating Systems and System Programming (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.quora.com/What-is-the-difference-between-a-process-and-a-thread",target:"_blank",rel:"noopener noreferrer"}},[e._v("What Is The Difference Between A Process And A Thread?"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("Covers:\n"),t("ul",[t("li",[e._v("Processes, Threads, Concurrency issues\n"),t("ul",[t("li",[e._v("Difference between processes and threads")]),e._v(" "),t("li",[e._v("Processes")]),e._v(" "),t("li",[e._v("Threads")]),e._v(" "),t("li",[e._v("Locks")]),e._v(" "),t("li",[e._v("Mutexes")]),e._v(" "),t("li",[e._v("Semaphores")]),e._v(" "),t("li",[e._v("Monitors")]),e._v(" "),t("li",[e._v("How they work?")]),e._v(" "),t("li",[e._v("Deadlock")]),e._v(" "),t("li",[e._v("Livelock")])])]),e._v(" "),t("li",[e._v("CPU activity, interrupts, context switching")]),e._v(" "),t("li",[e._v("Modern concurrency constructs with multicore processors")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=LKe7xK0bF7o&list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&index=2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Paging, segmentation and virtual memory (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=uFKi2-J-6II&list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&index=3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Interrupts (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("Process resource needs (memory: code, static storage, stack, heap, and also file descriptors, i/o)")]),e._v(" "),t("li",[e._v("Thread resource needs (shares above (minus stack) with other threads in the same process but each has its own pc, stack counter, registers, and stack)")]),e._v(" "),t("li",[e._v("Forking is really copy on write (read-only) until the new process writes to memory, then it does a full copy.")]),e._v(" "),t("li",[e._v("Context switching\n"),t("ul",[t("li",[e._v("How context switching is initiated by the operating system and underlying hardware?")])])])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL5jc9xFGsL8E12so1wlMS0r0hTQoJL74M",target:"_blank",rel:"noopener noreferrer"}},[e._v("threads in C++ (series - 10 videos)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLacuG5pysFbDQU8kKxbUh4K5c1iL5_k7k",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 377 Spring '14: Operating Systems from University of Massachusetts"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] concurrency in Python (videos):\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL1H1sBF1VAKVMONJWJkmUh6_p8g4F2oy1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Short series on threads"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=Bs7vPNbB9JM",target:"_blank",rel:"noopener noreferrer"}},[e._v("Python Threads"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=Obt-vMVdM8s",target:"_blank",rel:"noopener noreferrer"}},[e._v("Understanding the Python GIL (2010)"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.dabeaz.com/GIL",target:"_blank",rel:"noopener noreferrer"}},[e._v("reference"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=MCs5OvhV9S4",target:"_blank",rel:"noopener noreferrer"}},[e._v("David Beazley - Python Concurrency From the Ground Up: LIVE! - PyCon 2015"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ZzfHjytDceU",target:"_blank",rel:"noopener noreferrer"}},[e._v("Keynote David Beazley - Topics of Interest (Python Asyncio)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=0zaPs8OtyKY",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mutex in Python"),t("OutboundLink")],1)])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"testing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#testing"}},[e._v("#")]),e._v(" Testing")]),e._v(" "),t("ul",[t("li",[e._v("To cover:\n"),t("ul",[t("li",[e._v("how unit testing works")]),e._v(" "),t("li",[e._v("what are mock objects")]),e._v(" "),t("li",[e._v("what is integration testing")]),e._v(" "),t("li",[e._v("what is dependency injection")])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=SAhJf36_u5U",target:"_blank",rel:"noopener noreferrer"}},[e._v("Agile Software Testing with James Bach (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ILkT_HV9DVU",target:"_blank",rel:"noopener noreferrer"}},[e._v("Open Lecture by James Bach on Software Testing (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://vimeo.com/83960706",target:"_blank",rel:"noopener noreferrer"}},[e._v("Steve Freeman - Test-Driven Development (that’s not what we meant) (video)"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://gotocon.com/dl/goto-berlin-2013/slides/SteveFreeman_TestDrivenDevelopmentThatsNotWhatWeMeant.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("slides"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Dependency injection:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=IKD2-MAkXyQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("video"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"http://jasonpolites.github.io/tao-of-testing/ch3-1.1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tao Of Testing"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"http://jasonpolites.github.io/tao-of-testing/ch4-1.1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to write tests"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"string-searching-manipulations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-searching-manipulations"}},[e._v("#")]),e._v(" String searching & manipulations")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/TH18W/suffix-arrays",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick - Suffix Arrays (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/home/week/4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick - Substring Search (videos)"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/n3ZpG/introduction-to-substring-search",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. Introduction to Substring Search"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/2Kn5i/brute-force-substring-search",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. Brute-Force Substring Search"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/TAtDr/knuth-morris-pratt",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. Knuth-Morris Pratt"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/CYxOT/boyer-moore",target:"_blank",rel:"noopener noreferrer"}},[e._v("4. Boyer-Moore"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/3KiqT/rabin-karp",target:"_blank",rel:"noopener noreferrer"}},[e._v("5. Rabin-Karp"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/tAfHI/search-pattern-in-text",target:"_blank",rel:"noopener noreferrer"}},[e._v("Search pattern in text (video)"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v('If you need more detail on this subject, see "String Matching" section in '),t("a",{attrs:{href:"#additional-detail-on-some-subjects"}},[e._v("Additional Detail on Some Subjects")]),e._v(".")])]),e._v(" "),t("li",[t("h3",{attrs:{id:"tries"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tries"}},[e._v("#")]),e._v(" Tries")]),e._v(" "),t("ul",[t("li",[e._v("Note there are different kinds of tries. Some have prefixes, some don't, and some use string instead of bits\nto track the path")]),e._v(" "),t("li",[e._v("I read through code, but will not implement")]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/home/week/4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick - Tries (3 videos)"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/CPVdr/r-way-tries",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. R Way Tries"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/yQM8K/ternary-search-tries",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. Ternary Search Tries"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/jwNmV/character-based-operations",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. Character Based Operations"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Tries",target:"_blank",rel:"noopener noreferrer"}},[e._v("Notes on Data Structures and Programming Techniques"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Short course videos:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/08Xyf/core-introduction-to-tries",target:"_blank",rel:"noopener noreferrer"}},[e._v("Introduction To Tries (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/PvlZW/core-performance-of-tries",target:"_blank",rel:"noopener noreferrer"}},[e._v("Performance Of Tries (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/DFvd3/core-implementing-a-trie",target:"_blank",rel:"noopener noreferrer"}},[e._v("Implementing A Trie (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.toptal.com/java/the-trie-a-neglected-data-structure",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Trie: A Neglected Data Structure"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.topcoder.com/community/competitive-programming/tutorials/using-tries/",target:"_blank",rel:"noopener noreferrer"}},[e._v("TopCoder - Using Tries"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=TJ8SkcUSdbU",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stanford Lecture (real world use case) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=NinWEPPrkDQ&index=16&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT, Advanced Data Structures, Strings (can get pretty obscure about halfway through) (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"floating-point-numbers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#floating-point-numbers"}},[e._v("#")]),e._v(" Floating Point Numbers")]),e._v(" "),t("ul",[t("li",[e._v("[ ] simple 8-bit: "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ji3SfClm8TU",target:"_blank",rel:"noopener noreferrer"}},[e._v("Representation of Floating Point Numbers - 1 (video - there is an error in calculations - see video description)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] 32 bit: "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=50ZYcZebIec",target:"_blank",rel:"noopener noreferrer"}},[e._v("IEEE754 32-bit floating point binary (video)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"unicode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unicode"}},[e._v("#")]),e._v(" Unicode")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"http://www.joelonsoftware.com/articles/Unicode.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"http://kunststube.net/encoding/",target:"_blank",rel:"noopener noreferrer"}},[e._v("What Every Programmer Absolutely, Positively Needs To Know About Encodings And Character Sets To Work With Text"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"endianness"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#endianness"}},[e._v("#")]),e._v(" Endianness")]),e._v(" "),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://web.archive.org/web/20180107141940/http://www.cs.umd.edu:80/class/sum2003/cmsc311/Notes/Data/endian.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Big And Little Endian"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=JrNF0KRAlyo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Big Endian Vs Little Endian (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=oBSuXP-1Tc0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Big And Little Endian Inside/Out (video)"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("Very technical talk for kernel devs. Don't worry if most is over your head.")]),e._v(" "),t("li",[e._v("The first half is enough.")])])])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"networking"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#networking"}},[e._v("#")]),e._v(" Networking")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("if you have networking experience or want to be a reliability engineer or operations engineer, expect questions")])]),e._v(" "),t("li",[e._v("Otherwise, this is just good to know")]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.khanacademy.org/computing/code-org/computers-and-the-internet",target:"_blank",rel:"noopener noreferrer"}},[e._v("Khan Academy"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=Vdc8TCESIg8",target:"_blank",rel:"noopener noreferrer"}},[e._v("UDP and TCP: Comparison of Transport Protocols (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=e5DEVa9eSN0",target:"_blank",rel:"noopener noreferrer"}},[e._v("TCP/IP and the OSI Model Explained! (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=nomyRJehhnM",target:"_blank",rel:"noopener noreferrer"}},[e._v("Packet Transmission across the Internet. Networking & TCP/IP tutorial. (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=WGJrLqtX7As",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=S2iBR2ZlZf0",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSL and HTTPS (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=Rp3iZUvXWlM",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSL/TLS (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=E9FxNzv1Tr8",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP 2.0 (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLEbnTDJUr_IegfoqO4iPnPYQui46QqT0j",target:"_blank",rel:"noopener noreferrer"}},[e._v("Video Series (21 videos) (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=t5xYI0jzOf4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Subnetting Demystified - Part 5 CIDR Notation (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] Sockets:\n"),t("ul",[t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=6G_W54zuadg&t=6s",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java - Sockets - Introduction (video)"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=G75vN2mnJeQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Socket Programming (video)"),t("OutboundLink")],1)])])])])])]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"final-review"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#final-review"}},[e._v("#")]),e._v(" Final Review")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("This section will have shorter videos that you can watch pretty quickly to review most of the important concepts.\nIt's nice if you want a refresher often.\n")])])]),t("ul",[t("li",[e._v("[ ] Series of 2-3 minutes short subject videos (23 videos)\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=r4r1DZcx1cM&list=PLmVb1OknmNJuC5POdcDv5oCS7_OUkDgpj&index=22",target:"_blank",rel:"noopener noreferrer"}},[e._v("Videos"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] Series of 2-5 minutes short subject videos - Michael Sambol (18 videos):\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.youtube.com/channel/UCzDJwLWoYCUQowF_nG3m5OQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Videos"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick Videos - Algorithms I"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("[ ] "),t("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick Videos - Algorithms II"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=a.exports}}]);